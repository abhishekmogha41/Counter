{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst auth = {};\nconst authSlice = createSlice();\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Abhishek/Code/Redux counter/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","auth","authSlice","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AACA,MAAMC,IAAI,GAAE,EAAZ;AACA,MAAMC,SAAS,GAACN,WAAW,EAA3B;AACA,MAAMO,YAAY,GAAGP,WAAW,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,SADyB;AAE/BN,EAAAA,mBAF+B;AAG/BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACR,OAAN;AACD,KAHO;;AAIRS,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACR,OAAN;AACD,KANO;;AAORU,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACR,OAAN,GAAgBQ,KAAK,CAACR,OAAN,GAAgBW,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACP,WAAN,GAAoB,CAACO,KAAK,CAACP,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMa,KAAK,GAAGhB,cAAc,CAAC;AAAEiB,EAAAA,OAAO,EAAEX,YAAY,CAACW;AAAxB,CAAD,CAA5B;AAEA,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\nconst auth= {}\r\nconst authSlice=createSlice()\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({ reducer: counterSlice.reducer });\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}