{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState\n});\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Abhishek/Code/Redux counter/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","initialAuthState","isAuthenticated","authSlice","name","initialState","counterSlice","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,eAAe,EAAE;AADM,CAAzB;AAGA,MAAMC,SAAS,GAAGP,WAAW,CAAC;AAC5BQ,EAAAA,IAAI,EAAE,gBADsB;AAE5BC,EAAAA,YAAY,EAAEJ;AAFc,CAAD,CAA7B;AAKA,MAAMK,YAAY,GAAGV,WAAW,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEP,mBAFiB;AAG/BS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACV,OAAN;AACD,KAHO;;AAIRW,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACV,OAAN;AACD,KANO;;AAORY,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACV,OAAN,GAAgBU,KAAK,CAACV,OAAN,GAAgBa,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACT,WAAN,GAAoB,CAACS,KAAK,CAACT,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMe,KAAK,GAAGlB,cAAc,CAAC;AAAEmB,EAAAA,OAAO,EAAEV,YAAY,CAACU;AAAxB,CAAD,CAA5B;AAEA,OAAO,MAAMC,cAAc,GAAGX,YAAY,CAACY,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\nconst initialAuthState = {\r\n  isAuthenticated: false,\r\n};\r\nconst authSlice = createSlice({\r\n  name: \"authentication\",\r\n  initialState: initialAuthState,\r\n});\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({ reducer: counterSlice.reducer });\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}