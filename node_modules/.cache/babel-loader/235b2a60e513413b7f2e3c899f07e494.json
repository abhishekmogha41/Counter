{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authAction = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Abhishek/Code/Redux counter/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","counterSlice","increment","decrement","increase","action","payload","toggleCounter","store","reducer","auth","counterActions","actions","authAction"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,eAAe,EAAE;AADM,CAAzB;AAGA,MAAMC,SAAS,GAAGP,WAAW,CAAC;AAC5BQ,EAAAA,IAAI,EAAE,gBADsB;AAE5BC,EAAAA,YAAY,EAAEJ,gBAFc;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,CAACC,KAAD,EAAQ;AACXA,MAAAA,KAAK,CAACN,eAAN,GAAwB,IAAxB;AACD,KAHO;;AAIRO,IAAAA,MAAM,CAACD,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,eAAN,GAAwB,KAAxB;AACD;;AANO;AAHkB,CAAD,CAA7B;AAaA,MAAMQ,YAAY,GAAGd,WAAW,CAAC;AAC/BQ,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEP,mBAFiB;AAG/BQ,EAAAA,QAAQ,EAAE;AACRK,IAAAA,SAAS,CAACH,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACT,OAAN;AACD,KAHO;;AAIRa,IAAAA,SAAS,CAACJ,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACT,OAAN;AACD,KANO;;AAORc,IAAAA,QAAQ,CAACL,KAAD,EAAQM,MAAR,EAAgB;AACtBN,MAAAA,KAAK,CAACT,OAAN,GAAgBS,KAAK,CAACT,OAAN,GAAgBe,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACR,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACR,WAAN,GAAoB,CAACQ,KAAK,CAACR,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMiB,KAAK,GAAGpB,cAAc,CAAC;AAC3BqB,EAAAA,OAAO,EAAE;AAAEnB,IAAAA,OAAO,EAAEW,YAAY,CAACQ,OAAxB;AAAiCC,IAAAA,IAAI,EAAEhB,SAAS,CAACe;AAAjD;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAME,cAAc,GAAGV,YAAY,CAACW,OAApC;AACP,OAAO,MAAMC,UAAU,GAAGnB,SAAS,CAACkB,OAA7B;AACP,eAAeJ,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\nconst initialAuthState = {\r\n  isAuthenticated: false,\r\n};\r\nconst authSlice = createSlice({\r\n  name: \"authentication\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authAction = authSlice.actions\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}